---
import Packages from './Packages.astro'

interface Props {
	cdn?: boolean;
	base?: number;
	scale?: number;
	js?: boolean;
	selectors?: string | string[];
	pkg?:string
}

let { base = 20, scale = 1, js, selectors, pkg } = Astro.props as Props;

let overrides: string[];
if (selectors && !js) {
	throw Error("prop.js needs to be appended to the `<Typetura/>` component inorder to adjust Typetura's default selectors");
}
if (selectors) {
	if (typeof selectors === 'string') {
		if (selectors.includes(',')) {
			overrides = [...selectors.split(',')];
		}
		overrides = selectors.includes(',') ? [...selectors.split(',')] : [selectors];
	}
	if (Array.isArray(selectors)) {
		overrides = [...selectors];
	}
}
const renderStatement = () => {
	if (js && selectors) {
		return `<script>window.typetura={ base:${base}scale:${scale},selectors:${overrides}
		}</script>`;
	}
	if (js) {
		return `<script>window.typetura={base:${base},scale:${scale}}</script>`;
	}
	return `
	<style>
	:root{
		--tt-base:${base};
		--tt-scale:${scale};
	}
	</style>`;
};
---
{
	pack 
	 ? <Packages {pkg} />
	 :<script src="https://cdn.jsdelivr.net/gh/scottkellum/typetura.js@master/js/typetura.min.js"></script>
}

<Fragment set:html={renderStatement()} />
