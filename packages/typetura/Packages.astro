---
import { log } from 'console';

const handleError = (msg: string) => {
	throw new Error(msg);
};
type Packages =
	| 'Armonk'
	| 'Austin'
	| 'Boston'
	| 'Brussels'
	| 'Cape Canaveral'
	| 'Chapel Hill'
	| 'Chicago'
	| 'District of Columbia'
	| 'Fargo'
	| 'Flagstaff'
	| 'Kampala'
	| 'Los Angeles'
	| 'Madrid'
	| 'Memphis'
	| 'New Haven'
	| 'New York'
	| 'Oxford'
	| 'Palo Alto'
	| 'Prague'
	| 'Saint Denis'
	| 'Santa Fe'
	| 'Stockholm';

interface PackageProps {
	pkg: Packages;
}

const { pkg } = Astro.props as PackageProps;
/**
 * PUBLIC_TYPETURA_KEY  = Public API key
 * Obtained from process.env from build host
 * Else use `.env` to obtain Key
 */
const API_KEY = process.env.PUBLIC_TYPETURA_KEY || import.meta.env.PUBLIC_TYPETURA_KEY;
let check;
if (!API_KEY) {
	handleError(`
	⚠ Error from '<Typetura.Packages/>'
	Sorry there is no Typetura API key found within the project's '.env',
	If you are in possesion of an API key please set it to:
	'PUBLIC_TYPETURA_KEY=XXXXXXX-XXXXXXX-XXXXXXX-XXXXXXX'
	To signup for an official Typetura Font system visit:
	https://typetura.com/packages
	If you have any issues with your API key please contact:
	support@typetura.com
	`);
} else {
	check = await fetch(`https://cdn.typetura.com/typetura.js?apiKey=${API_KEY}`).then((res) => (res.status === 200 ? true : false));
}

if (!check) {
	handleError(`
	⚠ Error from '<Typetura.Packages/>,\nInvalid API-Key Detected, please check the validity of the key provided.\nIf you are experincing any problems with your API-Key, dont hesitate to contact us directly:\n support@typetura.com`);
}

const render = async () => `<script src="https://cdn.typetura.com/typetura.js?apiKey=${API_KEY}"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.typetura.com/${pkg.replace(' ', '-').toLowerCase()}/typetura.css?apiKey=${API_KEY}" />`;

let output = await render();
---

<!-- Typetura  Typography -->
<Fragment set:html={output} />
<!-- END: Typetura Typography -->
